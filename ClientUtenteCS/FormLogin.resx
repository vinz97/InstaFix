<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>